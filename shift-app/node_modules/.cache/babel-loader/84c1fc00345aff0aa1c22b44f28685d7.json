{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yusuf/Documents/Degree Project/shift-app/src/components/ShiftDashboard/ShiftDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { createStyles, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport ShiftList from './ShiftList/ShiftList';\nconst useStyles = makeStyles(theme => createStyles({// root: {\n  //    margin: '0 auto',\n  //    width: '80%',\n  // },\n}));\n\nconst ShiftDashboard = () => {\n  _s();\n\n  const [shiftData, setShiftData] = useState([]);\n  const [fetchingData, setFetchingData] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (fetchingData) {\n        try {\n          const response = await fetch('./data.json');\n          const data = await response.json();\n          setShiftData(data[0].shifts);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    fetchData();\n    return () => setFetchingData(false);\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: 'h3',\n      className: classes.heading,\n      children: \"Shift Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ShiftList, {\n      data: shiftData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ShiftDashboard, \"ST2zLQFx98WRYIIEEmuVDH1QgxU=\", false, function () {\n  return [useStyles];\n});\n\n_c = ShiftDashboard;\nexport default ShiftDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftDashboard\");","map":{"version":3,"sources":["/Users/yusuf/Documents/Degree Project/shift-app/src/components/ShiftDashboard/ShiftDashboard.tsx"],"names":["createStyles","makeStyles","Typography","React","useEffect","useState","ShiftList","useStyles","theme","ShiftDashboard","shiftData","setShiftData","fetchingData","setFetchingData","fetchData","response","fetch","data","json","shifts","error","console","log","classes","root","heading"],"mappings":";;;;;AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAA+DC,UAA/D,QAAiF,mBAAjF;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAIA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,IAC1BR,YAAY,CAAC,CACV;AACA;AACA;AACA;AAJU,CAAD,CADa,CAA5B;;AASA,MAAMS,cAA6D,GAAG,MAAM;AAAA;;AACzE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMU,SAAS,GAAG,YAAY;AAC3B,UAAIF,YAAJ,EAAkB;AACf,YAAI;AACD,gBAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,gBAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,UAAAA,YAAY,CAACM,IAAI,CAAC,CAAD,CAAJ,CAAQE,MAAT,CAAZ;AACF,SAJD,CAIE,OAAOC,KAAP,EAAc;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACH;AACH,KAVD;;AAWAN,IAAAA,SAAS;AAET,WAAO,MAAMD,eAAe,CAAC,KAAD,CAA5B;AACF,GAfQ,CAAT;AAiBA,QAAMU,OAAO,GAAGhB,SAAS,EAAzB;AAEA,sBACG;AAAK,IAAA,SAAS,EAAEgB,OAAO,CAACC,IAAxB;AAAA,4BACG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE,IAArB;AAA2B,MAAA,SAAS,EAAED,OAAO,CAACE,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAIG,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEf;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAQF,CA/BD;;GAAMD,c;UAqBaF,S;;;KArBbE,c;AAiCN,eAAeA,cAAf","sourcesContent":["import { createStyles, makeStyles, responsiveFontSizes, Theme, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport ShiftList from './ShiftList/ShiftList';\n\ninterface IShiftDashboardProps {}\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      // root: {\n      //    margin: '0 auto',\n      //    width: '80%',\n      // },\n   }),\n);\n\nconst ShiftDashboard: React.FunctionComponent<IShiftDashboardProps> = () => {\n   const [shiftData, setShiftData] = useState([]);\n   const [fetchingData, setFetchingData] = useState(true);\n\n   useEffect(() => {\n      const fetchData = async () => {\n         if (fetchingData) {\n            try {\n               const response = await fetch('./data.json');\n               const data = await response.json();\n               setShiftData(data[0].shifts);\n            } catch (error) {\n               console.log(error);\n            }\n         }\n      };\n      fetchData();\n\n      return () => setFetchingData(false);\n   });\n\n   const classes = useStyles();\n\n   return (\n      <div className={classes.root}>\n         <Typography variant={'h3'} className={classes.heading}>\n            Shift Dashboard\n         </Typography>\n         <ShiftList data={shiftData} />\n      </div>\n   );\n};\n\nexport default ShiftDashboard;\n"]},"metadata":{},"sourceType":"module"}